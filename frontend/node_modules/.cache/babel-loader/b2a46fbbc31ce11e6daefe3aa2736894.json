{"ast":null,"code":"var _jsxFileName = \"/Users/flok/Documents/Check/indexcards.ai/frontend/src/SetCard.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useRef, useState } from 'react';\nimport { secondsUntilAnswer } from './Store';\nimport classNames from 'classnames';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SetCard(_ref) {\n  _s();\n\n  let {\n    card\n  } = _ref;\n  const [showAnswer, setShowAnswer] = useState(false);\n  const answerInterval = useRef();\n  useEffect(() => {\n    function checkAnswerVisibility() {\n      const shouldShow = card.createdAt + secondsUntilAnswer * 1000 <= Date.now();\n\n      if (shouldShow) {\n        setShowAnswer(true);\n        clearInterval(answerInterval.current);\n        answerInterval.current = null;\n      }\n    }\n\n    checkAnswerVisibility();\n    answerInterval.current = setInterval(checkAnswerVisibility, 5000);\n  }, [card.createdAt]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-10/12 odd:ml-auto bg-gray-50 shadow rounded p-5 mt-10 overflow-hidden\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-md font-medium leading-6 text-gray-600 mb-3 border-b-2 -mx-5 -mt-5 pt-5 px-5 pb-5 bg-orange-50\",\n      children: card.question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      dangerouslySetInnerHTML: {\n        __html: showAnswer ? card.answer.replaceAll('\\n', '<br />') : 'Generating answer...'\n      },\n      className: classNames(\"py-3\", showAnswer ? 'text-gray-600' : 'text-gray-400 italic text-sm')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 4\n    }, this), card.tags.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-3 -mx-5 px-5 border-t-2 pt-3 border-gray-100 flex flex-wrap -m-1\",\n      children: card.tags.map(tag => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-gray-300 text-gray-600 text-xs font-medium rounded-full px-2 py-1 m-1\",\n        children: tag\n      }, tag, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 3\n  }, this);\n}\n\n_s(SetCard, \"hFyZ+AS6NhwYW4A/wwYstR+Hxho=\");\n\n_c = SetCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"SetCard\");","map":{"version":3,"sources":["/Users/flok/Documents/Check/indexcards.ai/frontend/src/SetCard.js"],"names":["useEffect","useRef","useState","secondsUntilAnswer","classNames","SetCard","card","showAnswer","setShowAnswer","answerInterval","checkAnswerVisibility","shouldShow","createdAt","Date","now","clearInterval","current","setInterval","question","__html","answer","replaceAll","tags","length","map","tag"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,kBAAT,QAAmC,SAAnC;AACA,OAAOC,UAAP,MAAuB,YAAvB;;AAEA,eAAe,SAASC,OAAT,OAA2B;AAAA;;AAAA,MAAV;AAAEC,IAAAA;AAAF,GAAU;AACzC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAMO,cAAc,GAAGR,MAAM,EAA7B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACf,aAASU,qBAAT,GAAiC;AAChC,YAAMC,UAAU,GAAIL,IAAI,CAACM,SAAL,GAAkBT,kBAAkB,GAAG,IAAxC,IAAkDU,IAAI,CAACC,GAAL,EAArE;;AAEA,UAAIH,UAAJ,EAAgB;AACfH,QAAAA,aAAa,CAAC,IAAD,CAAb;AAEAO,QAAAA,aAAa,CAACN,cAAc,CAACO,OAAhB,CAAb;AACAP,QAAAA,cAAc,CAACO,OAAf,GAAyB,IAAzB;AACA;AACD;;AAEDN,IAAAA,qBAAqB;AAErBD,IAAAA,cAAc,CAACO,OAAf,GAAyBC,WAAW,CAACP,qBAAD,EAAwB,IAAxB,CAApC;AACA,GAfQ,EAeN,CAACJ,IAAI,CAACM,SAAN,CAfM,CAAT;AAiBA,sBACC;AAAK,IAAA,SAAS,EAAC,yEAAf;AAAA,4BACC;AAAK,MAAA,SAAS,EAAC,qGAAf;AAAA,gBACEN,IAAI,CAACY;AADP;AAAA;AAAA;AAAA;AAAA,YADD,eAKC;AAAG,MAAA,uBAAuB,EAAE;AAAEC,QAAAA,MAAM,EAAEZ,UAAU,GAAGD,IAAI,CAACc,MAAL,CAAYC,UAAZ,CAAuB,IAAvB,EAA6B,QAA7B,CAAH,GAA4C;AAAhE,OAA5B;AAAsH,MAAA,SAAS,EAAEjB,UAAU,CAAC,MAAD,EAASG,UAAU,GAAG,eAAH,GAAqB,8BAAxC;AAA3I;AAAA;AAAA;AAAA;AAAA,YALD,EAOED,IAAI,CAACgB,IAAL,CAAUC,MAAV,GAAmB,CAAnB,iBACA;AAAK,MAAA,SAAS,EAAC,qEAAf;AAAA,gBACEjB,IAAI,CAACgB,IAAL,CAAUE,GAAV,CAAcC,GAAG,iBACjB;AAEC,QAAA,SAAS,EAAC,0EAFX;AAAA,kBAIEA;AAJF,SACMA,GADN;AAAA;AAAA;AAAA;AAAA,cADA;AADF;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAsBA;;GA3CuBpB,O;;KAAAA,O","sourcesContent":["import { useEffect, useRef, useState } from 'react';\nimport { secondsUntilAnswer } from './Store';\nimport classNames from 'classnames';\n\nexport default function SetCard({ card }) {\n\tconst [showAnswer, setShowAnswer] = useState(false);\n\tconst answerInterval = useRef();\n\n\tuseEffect(() => {\n\t\tfunction checkAnswerVisibility() {\n\t\t\tconst shouldShow = (card.createdAt + (secondsUntilAnswer * 1000)) <= Date.now();\n\n\t\t\tif (shouldShow) {\n\t\t\t\tsetShowAnswer(true);\n\n\t\t\t\tclearInterval(answerInterval.current);\n\t\t\t\tanswerInterval.current = null;\n\t\t\t}\n\t\t}\n\n\t\tcheckAnswerVisibility();\n\n\t\tanswerInterval.current = setInterval(checkAnswerVisibility, 5000);\n\t}, [card.createdAt]);\n\n\treturn (\n\t\t<div className=\"w-10/12 odd:ml-auto bg-gray-50 shadow rounded p-5 mt-10 overflow-hidden\">\n\t\t\t<div className=\"text-md font-medium leading-6 text-gray-600 mb-3 border-b-2 -mx-5 -mt-5 pt-5 px-5 pb-5 bg-orange-50\">\n\t\t\t\t{card.question}\n\t\t\t</div>\n\n\t\t\t<p dangerouslySetInnerHTML={{ __html: showAnswer ? card.answer.replaceAll('\\n', '<br />') : 'Generating answer...' }} className={classNames(\"py-3\", showAnswer ? 'text-gray-600' : 'text-gray-400 italic text-sm')}/>\n\n\t\t\t{card.tags.length > 0 && (\n\t\t\t\t<div className=\"mt-3 -mx-5 px-5 border-t-2 pt-3 border-gray-100 flex flex-wrap -m-1\">\n\t\t\t\t\t{card.tags.map(tag => (\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tkey={tag}\n\t\t\t\t\t\t\tclassName=\"bg-gray-300 text-gray-600 text-xs font-medium rounded-full px-2 py-1 m-1\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{tag}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n}"]},"metadata":{},"sourceType":"module"}