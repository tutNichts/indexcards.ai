{"ast":null,"code":"var _jsxFileName = \"/Users/flok/Documents/Check/indexcards.ai/frontend/src/CreateSetModal.js\",\n    _s = $RefreshSig$();\n\nimport { Dialog, Transition } from '@headlessui/react';\nimport { Fragment, useRef } from 'react';\nimport { array, object, string } from 'yup';\nimport { storedSets } from './Store';\nimport { Form, Formik, Field } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CreateSetModal(_ref) {\n  _s();\n\n  let {\n    isOpen,\n    onClose,\n    addSet\n  } = _ref;\n  const titleInputRef = useRef();\n  const tagsInputRef = useRef();\n  const validationSchema = object({\n    title: string().required('Bitte gib einen Titel für das Set an!'),\n    tags: array().of(string()).min(3, 'Bitte gib mindestens 3 Schlagwörter an!')\n  });\n  return /*#__PURE__*/_jsxDEV(Transition, {\n    appear: true,\n    show: isOpen,\n    as: Fragment,\n    children: /*#__PURE__*/_jsxDEV(Dialog, {\n      initialFocus: titleInputRef,\n      onClose: onClose,\n      className: \"fixed z-50 inset-0 overflow-y-auto\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"min-h-screen px-4 text-center\",\n        children: [/*#__PURE__*/_jsxDEV(Transition.Child, {\n          as: Fragment,\n          enter: \"ease-out duration-300\",\n          enterFrom: \"opacity-0 scale-95\",\n          enterTo: \"opacity-100 scale-100\",\n          leave: \"ease-in duration-200\",\n          leaveFrom: \"opacity-100 scale-100\",\n          leaveTo: \"opacity-0 scale-95\",\n          children: /*#__PURE__*/_jsxDEV(Dialog.Overlay, {\n            className: \"fixed inset-0\",\n            style: {\n              backgroundColor: 'rgba(0,0,0,0.3)'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            title: '',\n            tags: []\n          },\n          validationSchema: validationSchema,\n          onSubmit: values => {\n            addSet(validationSchema.cast(values)).then(() => {\n              onClose();\n            });\n          },\n          validateOnBlur: false,\n          validateOnChange: false,\n          children: _ref2 => {\n            let {\n              errors,\n              values: {\n                tags,\n                title\n              },\n              setFieldValue,\n              setValues\n            } = _ref2;\n            const setProposals = title.length < 3 ? [] : storedSets.filter(_ref3 => {\n              let {\n                topic\n              } = _ref3;\n              return topic.toLowerCase().includes(title.toLowerCase()) && topic.length !== title.length;\n            });\n            return /*#__PURE__*/_jsxDEV(Transition.Child, {\n              as: Fragment,\n              enter: \"ease-out duration-300\",\n              enterFrom: \"opacity-0 scale-95\",\n              enterTo: \"opacity-100 scale-100\",\n              leave: \"ease-in duration-200\",\n              leaveFrom: \"opacity-100 scale-100\",\n              leaveTo: \"opacity-0 scale-95\",\n              children: /*#__PURE__*/_jsxDEV(Form, {\n                className: \"inline-block w-full max-w-md my-8 overflow-hidden text-left align-middle transition-all transform bg-white shadow-xl rounded-lg\",\n                children: [/*#__PURE__*/_jsxDEV(Dialog.Title, {\n                  as: \"h3\",\n                  className: \"text-lg font-medium leading-6 text-gray-600 pt-6 px-6 pb-2\",\n                  children: \"Create Index Card Set\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"px-6 py-5 flex flex-col\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-4\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"block\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"mb-1 font-medium text-base text-gray-500\",\n                        children: \"Title\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 73,\n                        columnNumber: 14\n                      }, this), /*#__PURE__*/_jsxDEV(Field, {\n                        ref: titleInputRef,\n                        className: \"rounded focus:outline-0 text-gray-700 border border-gray-200 p-2 w-full\",\n                        type: \"text\",\n                        placeholder: \"Networking\",\n                        name: \"title\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 76,\n                        columnNumber: 14\n                      }, this), errors.title && /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"mt-1 text-xs text-red-500 font-medium\",\n                        children: errors.title\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 84,\n                        columnNumber: 15\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 72,\n                      columnNumber: 13\n                    }, this), setProposals.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"flex flex-wrap mt-2 border-2 border-dashed border-gray-200 rounded p-2\",\n                      children: setProposals.map(_ref4 => {\n                        let {\n                          topic,\n                          tags: proposalTags\n                        } = _ref4;\n                        return /*#__PURE__*/_jsxDEV(\"button\", {\n                          className: \"bg-gray-300 text-gray-600 text-xs font-medium rounded-full px-2 py-1 m-1\",\n                          onClick: () => {\n                            setValues(values => ({\n                              tags: [...new Set([...proposalTags, ...values.tags])],\n                              title: topic\n                            }));\n                            tagsInputRef.current.focus();\n                          },\n                          children: topic\n                        }, topic, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 91,\n                          columnNumber: 16\n                        }, this);\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 89,\n                      columnNumber: 14\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 71,\n                    columnNumber: 12\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-4\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"block\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"mb-1 font-medium text-base text-gray-500\",\n                        children: \"Tags\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 111,\n                        columnNumber: 14\n                      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                        ref: tagsInputRef,\n                        className: \"rounded focus:outline-0 text-gray-700 border border-gray-200 p-2 w-full\",\n                        type: \"text\",\n                        placeholder: \"Press Enter\",\n                        onKeyDown: event => {\n                          if (event.target.value.length < 3) {\n                            return;\n                          }\n\n                          if (event.key === 'Enter') {\n                            event.preventDefault();\n                            const inputValue = event.target.value;\n                            setValues(values => ({ ...values,\n                              tags: [...new Set([...values.tags, inputValue])]\n                            }));\n                            event.target.value = '';\n                          }\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 114,\n                        columnNumber: 14\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 110,\n                      columnNumber: 13\n                    }, this), errors.tags && /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"mt-1 text-xs text-red-500 font-medium\",\n                      children: errors.tags\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 138,\n                      columnNumber: 14\n                    }, this), tags.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"flex flex-wrap mt-2 border-2 border-dashed border-gray-200 rounded p-2\",\n                      children: tags.map(tag => /*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"bg-gray-300 text-gray-600 text-xs font-medium rounded-full px-2 py-1 m-1\",\n                        onClick: () => {\n                          setFieldValue(\"tags\", tags.filter(t => t !== tag));\n                        },\n                        children: tag\n                      }, tag, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 144,\n                        columnNumber: 16\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 142,\n                      columnNumber: 14\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 109,\n                    columnNumber: 12\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"button\",\n                      onClick: () => {\n                        onClose();\n                      },\n                      className: \"font-medium text-white bg-indigo-500 shadow text-sm rounded-lg py-2 px-3\",\n                      children: \"Upload Lecture Notes\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 159,\n                      columnNumber: 13\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 158,\n                    columnNumber: 12\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"px-6 py-3 bg-gray-100 flex items-center justify-between\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    onClick: () => {\n                      onClose();\n                    },\n                    className: \"font-medium text-base text-gray-400\",\n                    children: \"Close\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 171,\n                    columnNumber: 12\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"submit\",\n                    className: \"font-medium text-white bg-indigo-500 shadow text-sm rounded-lg py-2 px-3\",\n                    children: \"Save\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 180,\n                    columnNumber: 12\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 11\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 10\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 9\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 3\n  }, this);\n}\n\n_s(CreateSetModal, \"ZTTvGf5hzFl0D866eBHxe2E91Ms=\");\n\n_c = CreateSetModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateSetModal\");","map":{"version":3,"sources":["/Users/flok/Documents/Check/indexcards.ai/frontend/src/CreateSetModal.js"],"names":["Dialog","Transition","Fragment","useRef","array","object","string","storedSets","Form","Formik","Field","CreateSetModal","isOpen","onClose","addSet","titleInputRef","tagsInputRef","validationSchema","title","required","tags","of","min","backgroundColor","values","cast","then","errors","setFieldValue","setValues","setProposals","length","filter","topic","toLowerCase","includes","map","proposalTags","Set","current","focus","event","target","value","key","preventDefault","inputValue","tag","t"],"mappings":"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","sourcesContent":["import { Dialog, Transition } from '@headlessui/react';\nimport { Fragment, useRef } from 'react';\nimport { array, object, string } from 'yup';\nimport { storedSets } from './Store';\nimport { Form, Formik, Field } from 'formik';\n\nexport default function CreateSetModal({ isOpen, onClose, addSet }) {\n\tconst titleInputRef = useRef();\n\tconst tagsInputRef = useRef();\n\n\tconst validationSchema = object({\n\t\ttitle: string().required('Bitte gib einen Titel für das Set an!'),\n\t\ttags: array().of(string()).min(3, 'Bitte gib mindestens 3 Schlagwörter an!')\n\t});\n\n\treturn (\n\t\t<Transition appear show={isOpen} as={Fragment}>\n\t\t\t<Dialog\n\t\t\t\tinitialFocus={titleInputRef}\n\t\t\t\tonClose={onClose}\n\t\t\t\tclassName=\"fixed z-50 inset-0 overflow-y-auto\"\n\t\t\t>\n\t\t\t\t<div className=\"min-h-screen px-4 text-center\">\n\t\t\t\t\t<Transition.Child\n\t\t\t\t\t\tas={Fragment}\n\t\t\t\t\t\tenter=\"ease-out duration-300\"\n\t\t\t\t\t\tenterFrom=\"opacity-0 scale-95\"\n\t\t\t\t\t\tenterTo=\"opacity-100 scale-100\"\n\t\t\t\t\t\tleave=\"ease-in duration-200\"\n\t\t\t\t\t\tleaveFrom=\"opacity-100 scale-100\"\n\t\t\t\t\t\tleaveTo=\"opacity-0 scale-95\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<Dialog.Overlay\n\t\t\t\t\t\t\tclassName=\"fixed inset-0\"\n\t\t\t\t\t\t\tstyle={{ backgroundColor: 'rgba(0,0,0,0.3)' }}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Transition.Child>\n\t\t\t\t\t<Formik\n\t\t\t\t\t\tinitialValues={{ title: '', tags: [] }}\n\t\t\t\t\t\tvalidationSchema={validationSchema}\n\t\t\t\t\t\tonSubmit={values => {\n\t\t\t\t\t\t\taddSet(validationSchema.cast(values))\n\t\t\t\t\t\t\t\t.then(() => {\n\t\t\t\t\t\t\t\t\tonClose();\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tvalidateOnBlur={false}\n\t\t\t\t\t\tvalidateOnChange={false}\n\t\t\t\t\t>\n\t\t\t\t\t\t{({ errors, values: { tags, title }, setFieldValue, setValues }) => {\n\t\t\t\t\t\t\tconst setProposals = title.length < 3 ? [] : storedSets.filter(({ topic }) => topic.toLowerCase().includes(title.toLowerCase()) && topic.length !== title.length);\n\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<Transition.Child\n\t\t\t\t\t\t\t\t\tas={Fragment}\n\t\t\t\t\t\t\t\t\tenter=\"ease-out duration-300\"\n\t\t\t\t\t\t\t\t\tenterFrom=\"opacity-0 scale-95\"\n\t\t\t\t\t\t\t\t\tenterTo=\"opacity-100 scale-100\"\n\t\t\t\t\t\t\t\t\tleave=\"ease-in duration-200\"\n\t\t\t\t\t\t\t\t\tleaveFrom=\"opacity-100 scale-100\"\n\t\t\t\t\t\t\t\t\tleaveTo=\"opacity-0 scale-95\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Form className=\"inline-block w-full max-w-md my-8 overflow-hidden text-left align-middle transition-all transform bg-white shadow-xl rounded-lg\">\n\t\t\t\t\t\t\t\t\t\t<Dialog.Title\n\t\t\t\t\t\t\t\t\t\t\tas=\"h3\"\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"text-lg font-medium leading-6 text-gray-600 pt-6 px-6 pb-2\"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tCreate Index Card Set\n\t\t\t\t\t\t\t\t\t\t</Dialog.Title>\n\t\t\t\t\t\t\t\t\t\t<div className=\"px-6 py-5 flex flex-col\">\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"mb-4\">\n\t\t\t\t\t\t\t\t\t\t\t\t<label className=\"block\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"mb-1 font-medium text-base text-gray-500\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tTitle\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tref={titleInputRef}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"rounded focus:outline-0 text-gray-700 border border-gray-200 p-2 w-full\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Networking\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"title\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.title && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"mt-1 text-xs text-red-500 font-medium\">{errors.title}</p>\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t</label>\n\n\t\t\t\t\t\t\t\t\t\t\t\t{setProposals.length > 0 && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"flex flex-wrap mt-2 border-2 border-dashed border-gray-200 rounded p-2\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{setProposals.map(({ topic, tags: proposalTags }) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={topic}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"bg-gray-300 text-gray-600 text-xs font-medium rounded-full px-2 py-1 m-1\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetValues(values => ({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttags: [...new Set([...proposalTags, ...values.tags])],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: topic\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}));\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttagsInputRef.current.focus();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{topic}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"mb-4\">\n\t\t\t\t\t\t\t\t\t\t\t\t<label className=\"block\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"mb-1 font-medium text-base text-gray-500\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tTags\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tref={tagsInputRef}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"rounded focus:outline-0 text-gray-700 border border-gray-200 p-2 w-full\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Press Enter\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonKeyDown={event => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (event.target.value.length < 3) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (event.key === 'Enter') {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tevent.preventDefault();\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst inputValue = event.target.value;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetValues(values => ({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...values,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttags: [...new Set([...values.tags, inputValue])]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}));\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tevent.target.value = '';\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t\t\t{errors.tags && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"mt-1 text-xs text-red-500 font-medium\">{errors.tags}</p>\n\t\t\t\t\t\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t\t\t\t\t\t{tags.length > 0 && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"flex flex-wrap mt-2 border-2 border-dashed border-gray-200 rounded p-2\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{tags.map(tag => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={tag}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"bg-gray-300 text-gray-600 text-xs font-medium rounded-full px-2 py-1 m-1\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(\"tags\", tags.filter(t => t !== tag));\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{tag}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClose();\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"font-medium text-white bg-indigo-500 shadow text-sm rounded-lg py-2 px-3\"\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\tUpload Lecture Notes\n\t\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className=\"px-6 py-3 bg-gray-100 flex items-center justify-between\">\n\t\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClose();\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"font-medium text-base text-gray-400\"\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\tClose\n\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"font-medium text-white bg-indigo-500 shadow text-sm rounded-lg py-2 px-3\"\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\tSave\n\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t\t\t</Transition.Child>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}}\n\t\t\t\t\t</Formik>\n\t\t\t\t</div>\n\t\t\t</Dialog>\n\t\t</Transition>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}