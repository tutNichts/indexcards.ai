{"ast":null,"code":"import React, { useContext, createContext } from 'react';\nvar ForcePortalRootContext = /*#__PURE__*/createContext(false);\nfunction usePortalRoot() {\n  return useContext(ForcePortalRootContext);\n}\nfunction ForcePortalRoot(props) {\n  return React.createElement(ForcePortalRootContext.Provider, {\n    value: props.force\n  }, props.children);\n}\nexport { ForcePortalRoot, usePortalRoot };","map":{"version":3,"names":["ForcePortalRootContext","createContext","usePortalRoot","useContext","ForcePortalRoot","props","React","createElement","Provider","value","force","children"],"sources":["/Users/flok/Documents/Check/indexcards.ai/frontend/node_modules/@headlessui/react/src/internal/portal-force-root.tsx"],"sourcesContent":["import React, {\n  createContext,\n  useContext,\n\n  // Types\n  ReactNode,\n} from 'react'\n\nlet ForcePortalRootContext = createContext(false)\n\nexport function usePortalRoot() {\n  return useContext(ForcePortalRootContext)\n}\n\ninterface ForcePortalRootProps {\n  force: boolean\n  children: ReactNode\n}\n\nexport function ForcePortalRoot(props: ForcePortalRootProps) {\n  return (\n    <ForcePortalRootContext.Provider value={props.force}>\n      {props.children}\n    </ForcePortalRootContext.Provider>\n  )\n}\n"],"mappings":";AAQA,IAAIA,sBAAsB,gBAAGC,aAAa,CAAC,KAAD,CAA1C;SAEgBC,cAAA;EACd,OAAOC,UAAU,CAACH,sBAAD,CAAjB;AACD;SAOeI,gBAAgBC,KAAA;EAC9B,OACEC,KAAA,CAAAC,aAAA,CAACP,sBAAsB,CAACQ,QAAxB;IAAiCC,KAAK,EAAEJ,KAAK,CAACK;GAA9C,EACGL,KAAK,CAACM,QADT,CADF;AAKD"},"metadata":{},"sourceType":"module"}