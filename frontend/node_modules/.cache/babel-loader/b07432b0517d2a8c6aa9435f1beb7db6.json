{"ast":null,"code":"import { objectWithoutPropertiesLoose as _objectWithoutPropertiesLoose, extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport { useRef } from 'react';\nimport { render } from '../../utils/render.esm.js';\nimport { useServerHandoffComplete } from '../../hooks/use-server-handoff-complete.esm.js';\nimport { useFocusTrap, Features } from '../../hooks/use-focus-trap.esm.js';\nvar DEFAULT_FOCUS_TRAP_TAG = 'div';\nfunction FocusTrap(props) {\n  var container = useRef(null);\n  var initialFocus = props.initialFocus,\n    passthroughProps = _objectWithoutPropertiesLoose(props, [\"initialFocus\"]);\n  var ready = useServerHandoffComplete();\n  useFocusTrap(container, ready ? Features.All : Features.None, {\n    initialFocus: initialFocus\n  });\n  var propsWeControl = {\n    ref: container\n  };\n  return render({\n    props: _extends({}, passthroughProps, propsWeControl),\n    defaultTag: DEFAULT_FOCUS_TRAP_TAG,\n    name: 'FocusTrap'\n  });\n}\nexport { FocusTrap };","map":{"version":3,"names":["DEFAULT_FOCUS_TRAP_TAG","FocusTrap","props","container","useRef","initialFocus","passthroughProps","_objectWithoutPropertiesLoose","ready","useServerHandoffComplete","useFocusTrap","Features","All","None","propsWeControl","ref","render","_extends","defaultTag","name"],"sources":["/Users/flok/Documents/Check/indexcards.ai/frontend/node_modules/@headlessui/react/src/components/focus-trap/focus-trap.tsx"],"sourcesContent":["import {\n  useRef,\n\n  // Types\n  ElementType,\n  MutableRefObject,\n} from 'react'\n\nimport { Props } from '../../types'\nimport { render } from '../../utils/render'\nimport { useFocusTrap, Features as FocusTrapFeatures } from '../../hooks/use-focus-trap'\nimport { useServerHandoffComplete } from '../../hooks/use-server-handoff-complete'\n\nlet DEFAULT_FOCUS_TRAP_TAG = 'div' as const\n\nexport function FocusTrap<TTag extends ElementType = typeof DEFAULT_FOCUS_TRAP_TAG>(\n  props: Props<TTag> & { initialFocus?: MutableRefObject<HTMLElement | null> }\n) {\n  let container = useRef<HTMLElement | null>(null)\n  let { initialFocus, ...passthroughProps } = props\n\n  let ready = useServerHandoffComplete()\n  useFocusTrap(container, ready ? FocusTrapFeatures.All : FocusTrapFeatures.None, { initialFocus })\n\n  let propsWeControl = {\n    ref: container,\n  }\n\n  return render({\n    props: { ...passthroughProps, ...propsWeControl },\n    defaultTag: DEFAULT_FOCUS_TRAP_TAG,\n    name: 'FocusTrap',\n  })\n}\n"],"mappings":";;;;;AAaA,IAAIA,sBAAsB,GAAG,KAA7B;SAEgBC,UACdC,KAAA;EAEA,IAAIC,SAAS,GAAGC,MAAM,CAAqB,IAArB,CAAtB;MACMC,YAAA,GAAsCH,KAAA,CAAtCG,YAAA;IAAiBC,gBAAA,GAAAC,6BAAA,CAAqBL,KAAA;EAE5C,IAAIM,KAAK,GAAGC,wBAAwB,EAApC;EACAC,YAAY,CAACP,SAAD,EAAYK,KAAK,GAAGG,QAAiB,CAACC,GAArB,GAA2BD,QAAiB,CAACE,IAA9D,EAAoE;IAAER,YAAY,EAAZA;EAAF,CAApE,CAAZ;EAEA,IAAIS,cAAc,GAAG;IACnBC,GAAG,EAAEZ;EADc,CAArB;EAIA,OAAOa,MAAM,CAAC;IACZd,KAAK,EAAAe,QAAA,KAAOX,gBAAP,EAA4BQ,cAA5B,CADO;IAEZI,UAAU,EAAElB,sBAFA;IAGZmB,IAAI,EAAE;EAHM,CAAD,CAAb;AAKD"},"metadata":{},"sourceType":"module"}