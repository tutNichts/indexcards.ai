{"ast":null,"code":"var _jsxFileName = \"/Users/flok/Documents/Check/indexcards.ai/frontend/src/Overview.js\",\n    _s = $RefreshSig$();\n\nimport classNames from 'classnames';\nimport CreateSetModal from './CreateSetModal';\nimport { useEffect, useState } from 'react';\nimport { getState, persistState } from './Store';\nimport { Link } from 'react-router-dom'; // Get all card sets of the current user\n// currentUser.cardSets.all()\n// Creates a card set in context of the current user\n\n/*\ncurrentUser.cardSets.create({\n\ttitle: \"Strategisches Management\",\n\ttags: [\"disruptive Innoviation\", \"WACC\", \"BCG-Matrix\"],\n})\n*/\n// Remove card set of the current user\n// currentUser.cardSets.delete({ id: \"ee964b90-ba46-4d3d-ab70-bcac6a57487a\" })\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function Title() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex items-center justify-between\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"font-medium text-gray-700 text-lg\",\n      children: \"My Index Card Sets\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"rounded bg-indigo-500 text-white text-sm px-2 py-3 font-medium shadow\",\n      id: \"open-create-modal\",\n      children: \"Create New Index Card Set\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 3\n  }, this);\n}\n_c = Title;\nexport function Page() {\n  _s();\n\n  const [state, setState] = useState(getState());\n  const [createModalOpen, setCreateModalOpen] = useState(false);\n  useEffect(() => {\n    function listener() {\n      setCreateModalOpen(true);\n    }\n\n    document.querySelector('#open-create-modal').addEventListener('click', listener);\n  }, []);\n  useEffect(() => {\n    persistState(state);\n  }, [state]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classNames('border-4 bg-gray-50 border-dashed border-gray-200 rounded-lg flex', state.sets.length === 0 ? 'h-96 flex-col items-center justify-center' : 'p-10'),\n      children: state.sets.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm text-gray-500\",\n        children: \"You haven't created any index card sets yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 6\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-wrap -m-2\",\n        children: state.sets.map(set => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white shadow bg-white rounded m-2 w-96 overflow-hidden\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"font-medium text-indigo-500 p-5 text-center\",\n            children: set.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-gray-50 border-t-4 border-gray-100 px-5 py-3 flex items-center justify-around\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"text-sm text-gray-400 font-medium\",\n              onClick: () => {\n                if (window.confirm('Wirklich lÃ¶schen? tbd')) {\n                  setState(state => ({ ...state,\n                    sets: state.sets.filter(_ref => {\n                      let {\n                        id\n                      } = _ref;\n                      return id !== set.id;\n                    })\n                  }));\n                }\n              },\n              children: \"remove\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: `/set/${set.id}`,\n              className: \"text-sm text-indigo-500 font-medium\",\n              children: \"open\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 10\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 9\n          }, this)]\n        }, set.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 8\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(CreateSetModal, {\n      isOpen: createModalOpen,\n      onClose: () => {\n        setCreateModalOpen(false);\n      },\n      addSet: _ref2 => {\n        let {\n          title,\n          tags\n        } = _ref2;\n        setState(state => ({ ...state,\n          sets: [...state.sets, {\n            title,\n            tags,\n            id: Date.now()\n          }]\n        }));\n        return Promise.resolve();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Page, \"EWCZCNmWjYcQjiefNkrT4JDyIL4=\");\n\n_c2 = Page;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Title\");\n$RefreshReg$(_c2, \"Page\");","map":{"version":3,"sources":["/Users/flok/Documents/Check/indexcards.ai/frontend/src/Overview.js"],"names":["classNames","CreateSetModal","useEffect","useState","getState","persistState","Link","Title","Page","state","setState","createModalOpen","setCreateModalOpen","listener","document","querySelector","addEventListener","sets","length","map","set","title","window","confirm","filter","id","tags","Date","now","Promise","resolve"],"mappings":"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","sourcesContent":["import classNames from 'classnames';\nimport CreateSetModal from './CreateSetModal';\nimport { useEffect, useState } from 'react';\nimport { getState, persistState } from './Store';\nimport { Link } from 'react-router-dom';\n\n// Get all card sets of the current user\n// currentUser.cardSets.all()\n\n// Creates a card set in context of the current user\n/*\ncurrentUser.cardSets.create({\n\ttitle: \"Strategisches Management\",\n\ttags: [\"disruptive Innoviation\", \"WACC\", \"BCG-Matrix\"],\n})\n*/\n\n// Remove card set of the current user\n// currentUser.cardSets.delete({ id: \"ee964b90-ba46-4d3d-ab70-bcac6a57487a\" })\n\nexport function Title() {\n\treturn (\n\t\t<div className=\"flex items-center justify-between\">\n\t\t\t<h1 className=\"font-medium text-gray-700 text-lg\">My Index Card Sets</h1>\n\n\t\t\t<button className=\"rounded bg-indigo-500 text-white text-sm px-2 py-3 font-medium shadow\" id=\"open-create-modal\">\n\t\t\t\tCreate New Index Card Set\n\t\t\t</button>\n\t\t</div>\n\t);\n}\n\nexport function Page() {\n\tconst [state, setState] = useState(getState());\n\tconst [createModalOpen, setCreateModalOpen] = useState(false);\n\n\tuseEffect(() => {\n\t\tfunction listener() {\n\t\t\tsetCreateModalOpen(true);\n\t\t}\n\n\t\tdocument.querySelector('#open-create-modal').addEventListener('click', listener);\n\t}, []);\n\n\tuseEffect(() => {\n\t\tpersistState(state);\n\t}, [state]);\n\n\treturn (\n\t\t<>\n\t\t\t<div className={classNames('border-4 bg-gray-50 border-dashed border-gray-200 rounded-lg flex', state.sets.length === 0 ? 'h-96 flex-col items-center justify-center' : 'p-10')}>\n\t\t\t\t{state.sets.length === 0 ? (\n\t\t\t\t\t<p className=\"text-sm text-gray-500\">You haven't created any index card sets yet.</p>\n\t\t\t\t) : (\n\t\t\t\t\t<div className=\"flex flex-wrap -m-2\">\n\t\t\t\t\t\t{state.sets.map(set => (\n\t\t\t\t\t\t\t<div key={set.id} className=\"bg-white shadow bg-white rounded m-2 w-96 overflow-hidden\">\n\t\t\t\t\t\t\t\t<div className=\"font-medium text-indigo-500 p-5 text-center\">{set.title}</div>\n\n\t\t\t\t\t\t\t\t<div className=\"bg-gray-50 border-t-4 border-gray-100 px-5 py-3 flex items-center justify-around\">\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tclassName=\"text-sm text-gray-400 font-medium\"\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\tif (window.confirm('Wirklich lÃ¶schen? tbd')) {\n\t\t\t\t\t\t\t\t\t\t\t\tsetState(state => ({\n\t\t\t\t\t\t\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\t\t\t\t\t\t\tsets: state.sets.filter(({ id }) => id !== set.id)\n\t\t\t\t\t\t\t\t\t\t\t\t}));\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tremove\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t<Link to={`/set/${set.id}`} className=\"text-sm text-indigo-500 font-medium\">open</Link>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\n\t\t\t<CreateSetModal\n\t\t\t\tisOpen={createModalOpen}\n\t\t\t\tonClose={() => {\n\t\t\t\t\tsetCreateModalOpen(false);\n\t\t\t\t}}\n\t\t\t\taddSet={({ title, tags }) => {\n\t\t\t\t\tsetState(state => ({\n\t\t\t\t\t\t...state,\n\t\t\t\t\t\tsets: [...state.sets, { title, tags, id: Date.now() }]\n\t\t\t\t\t}));\n\t\t\t\t\treturn Promise.resolve();\n\t\t\t\t}}\n\t\t\t/>\n\t\t</>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}