{"ast":null,"code":"var _jsxFileName = \"/Users/flok/Documents/Check/indexcards.ai/frontend/src/Overview.js\",\n    _s = $RefreshSig$();\n\nimport classNames from \"classnames\";\nimport CreateSetModal from \"./CreateSetModal\";\nimport { useEffect, useState } from \"react\";\nimport { getState, persistState } from \"./Store\";\nimport { Link } from \"react-router-dom\"; // Get all card sets of the current user\n// currentUser.cardSets.all()\n// Creates a card set in context of the current user\n\n/*\ncurrentUser.cardSets.create({\n\ttitle: \"Strategisches Management\",\n\ttags: [\"disruptive Innoviation\", \"WACC\", \"BCG-Matrix\"],\n})\n*/\n// Remove card set of the current user\n// currentUser.cardSets.delete({ id: \"ee964b90-ba46-4d3d-ab70-bcac6a57487a\" })\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function Title() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex items-center justify-between\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"font-medium text-gray-700 text-lg\",\n      children: \"My Index Card Sets\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"rounded bg-indigo-500 text-white text-sm px-2 py-3 font-medium shadow\",\n      id: \"open-create-modal\",\n      children: \"Create New Index Card Set\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_c = Title;\nexport function Page() {\n  _s();\n\n  const [state, setState] = useState(getState());\n  const [createModalOpen, setCreateModalOpen] = useState(false);\n  useEffect(() => {\n    function listener() {\n      setCreateModalOpen(true);\n    }\n\n    document.querySelector(\"#open-create-modal\").addEventListener(\"click\", listener);\n  }, []);\n  useEffect(() => {\n    persistState(state);\n  }, [state]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      name: \"file\",\n      onChange: file => {\n        console.log(file);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classNames(\"border-4 bg-gray-50 border-dashed border-gray-200 rounded-lg flex\", state.sets.length === 0 ? \"h-96 flex-col items-center justify-center\" : \"p-10\"),\n      children: state.sets.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm text-gray-500\",\n        children: \"You haven't created any index card sets yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-wrap -m-2\",\n        children: state.sets.map(set => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white shadow bg-white rounded m-2 w-96 overflow-hidden\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"font-medium text-indigo-500 p-5 text-center\",\n            children: set.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-gray-50 border-t-4 border-gray-100 px-5 py-3 flex items-center justify-around\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"text-sm text-gray-400 font-medium\",\n              onClick: () => {\n                if (window.confirm(\"Wirklich lÃ¶schen? tbd\")) {\n                  setState(state => ({ ...state,\n                    sets: state.sets.filter(_ref => {\n                      let {\n                        id\n                      } = _ref;\n                      return id !== set.id;\n                    })\n                  }));\n                }\n              },\n              children: \"Remove\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: `/set/${set.id}`,\n              className: \"text-sm text-indigo-500 font-medium\",\n              children: \"Open\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }, this)]\n        }, set.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CreateSetModal, {\n      isOpen: createModalOpen,\n      onClose: () => {\n        setCreateModalOpen(false);\n      },\n      addSet: _ref2 => {\n        let {\n          title,\n          tags\n        } = _ref2;\n        setState(state => ({ ...state,\n          sets: [...state.sets, {\n            title,\n            tags,\n            id: Date.now()\n          }]\n        }));\n        return Promise.resolve();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Page, \"EWCZCNmWjYcQjiefNkrT4JDyIL4=\");\n\n_c2 = Page;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Title\");\n$RefreshReg$(_c2, \"Page\");","map":{"version":3,"sources":["/Users/flok/Documents/Check/indexcards.ai/frontend/src/Overview.js"],"names":["classNames","CreateSetModal","useEffect","useState","getState","persistState","Link","Title","Page","state","setState","createModalOpen","setCreateModalOpen","listener","document","querySelector","addEventListener","file","console","log","sets","length","map","set","title","window","confirm","filter","id","tags","Date","now","Promise","resolve"],"mappings":"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","sourcesContent":["import classNames from \"classnames\";\nimport CreateSetModal from \"./CreateSetModal\";\nimport { useEffect, useState } from \"react\";\nimport { getState, persistState } from \"./Store\";\nimport { Link } from \"react-router-dom\";\n\n// Get all card sets of the current user\n// currentUser.cardSets.all()\n\n// Creates a card set in context of the current user\n/*\ncurrentUser.cardSets.create({\n\ttitle: \"Strategisches Management\",\n\ttags: [\"disruptive Innoviation\", \"WACC\", \"BCG-Matrix\"],\n})\n*/\n\n// Remove card set of the current user\n// currentUser.cardSets.delete({ id: \"ee964b90-ba46-4d3d-ab70-bcac6a57487a\" })\n\nexport function Title() {\n  return (\n    <div className=\"flex items-center justify-between\">\n      <h1 className=\"font-medium text-gray-700 text-lg\">My Index Card Sets</h1>\n\n      <button\n        className=\"rounded bg-indigo-500 text-white text-sm px-2 py-3 font-medium shadow\"\n        id=\"open-create-modal\"\n      >\n        Create New Index Card Set\n      </button>\n    </div>\n  );\n}\n\nexport function Page() {\n  const [state, setState] = useState(getState());\n  const [createModalOpen, setCreateModalOpen] = useState(false);\n\n  useEffect(() => {\n    function listener() {\n      setCreateModalOpen(true);\n    }\n\n    document\n      .querySelector(\"#open-create-modal\")\n      .addEventListener(\"click\", listener);\n  }, []);\n\n  useEffect(() => {\n    persistState(state);\n  }, [state]);\n\n  return (\n    <>\n      <input\n        type=\"file\"\n        name=\"file\"\n        onChange={(file) => {\n          console.log(file);\n        }}\n      />\n      <div\n        className={classNames(\n          \"border-4 bg-gray-50 border-dashed border-gray-200 rounded-lg flex\",\n          state.sets.length === 0\n            ? \"h-96 flex-col items-center justify-center\"\n            : \"p-10\"\n        )}\n      >\n        {state.sets.length === 0 ? (\n          <p className=\"text-sm text-gray-500\">\n            You haven't created any index card sets yet.\n          </p>\n        ) : (\n          <div className=\"flex flex-wrap -m-2\">\n            {state.sets.map((set) => (\n              <div\n                key={set.id}\n                className=\"bg-white shadow bg-white rounded m-2 w-96 overflow-hidden\"\n              >\n                <div className=\"font-medium text-indigo-500 p-5 text-center\">\n                  {set.title}\n                </div>\n\n                <div className=\"bg-gray-50 border-t-4 border-gray-100 px-5 py-3 flex items-center justify-around\">\n                  <button\n                    className=\"text-sm text-gray-400 font-medium\"\n                    onClick={() => {\n                      if (window.confirm(\"Wirklich lÃ¶schen? tbd\")) {\n                        setState((state) => ({\n                          ...state,\n                          sets: state.sets.filter(({ id }) => id !== set.id),\n                        }));\n                      }\n                    }}\n                  >\n                    Remove\n                  </button>\n                  <Link\n                    to={`/set/${set.id}`}\n                    className=\"text-sm text-indigo-500 font-medium\"\n                  >\n                    Open\n                  </Link>\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n\n      <CreateSetModal\n        isOpen={createModalOpen}\n        onClose={() => {\n          setCreateModalOpen(false);\n        }}\n        addSet={({ title, tags }) => {\n          setState((state) => ({\n            ...state,\n            sets: [...state.sets, { title, tags, id: Date.now() }],\n          }));\n          return Promise.resolve();\n        }}\n      />\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}