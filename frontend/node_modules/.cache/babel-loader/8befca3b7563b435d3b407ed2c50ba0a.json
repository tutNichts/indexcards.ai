{"ast":null,"code":"import { createForOfIteratorHelperLoose as _createForOfIteratorHelperLoose } from '../_virtual/_rollupPluginBabelHelpers.js';\nimport { useIsoMorphicEffect } from './use-iso-morphic-effect.esm.js';\nvar interactables = /*#__PURE__*/new Set();\nvar originals = /*#__PURE__*/new Map();\nfunction inert(element) {\n  element.setAttribute('aria-hidden', 'true'); // @ts-expect-error `inert` does not exist on HTMLElement (yet!)\n\n  element.inert = true;\n}\nfunction restore(element) {\n  var original = originals.get(element);\n  if (!original) return;\n  if (original['aria-hidden'] === null) element.removeAttribute('aria-hidden');else element.setAttribute('aria-hidden', original['aria-hidden']); // @ts-expect-error `inert` does not exist on HTMLElement (yet!)\n\n  element.inert = original.inert;\n}\nfunction useInertOthers(container, enabled) {\n  if (enabled === void 0) {\n    enabled = true;\n  }\n  useIsoMorphicEffect(function () {\n    if (!enabled) return;\n    if (!container.current) return;\n    var element = container.current; // Mark myself as an interactable element\n\n    interactables.add(element); // Restore elements that now contain an interactable child\n\n    for (var _iterator = _createForOfIteratorHelperLoose(originals.keys()), _step; !(_step = _iterator()).done;) {\n      var original = _step.value;\n      if (original.contains(element)) {\n        restore(original);\n        originals[\"delete\"](original);\n      }\n    } // Collect direct children of the body\n\n    document.querySelectorAll('body > *').forEach(function (child) {\n      if (!(child instanceof HTMLElement)) return; // Skip non-HTMLElements\n      // Skip the interactables, and the parents of the interactables\n\n      for (var _iterator2 = _createForOfIteratorHelperLoose(interactables), _step2; !(_step2 = _iterator2()).done;) {\n        var interactable = _step2.value;\n        if (child.contains(interactable)) return;\n      } // Keep track of the elements\n\n      if (interactables.size === 1) {\n        originals.set(child, {\n          'aria-hidden': child.getAttribute('aria-hidden'),\n          // @ts-expect-error `inert` does not exist on HTMLElement (yet!)\n          inert: child.inert\n        }); // Mutate the element\n\n        inert(child);\n      }\n    });\n    return function () {\n      // Inert is disabled on the current element\n      interactables[\"delete\"](element); // We still have interactable elements, therefore this one and its parent\n      // will become inert as well.\n\n      if (interactables.size > 0) {\n        // Collect direct children of the body\n        document.querySelectorAll('body > *').forEach(function (child) {\n          if (!(child instanceof HTMLElement)) return; // Skip non-HTMLElements\n          // Skip already inert parents\n\n          if (originals.has(child)) return; // Skip the interactables, and the parents of the interactables\n\n          for (var _iterator3 = _createForOfIteratorHelperLoose(interactables), _step3; !(_step3 = _iterator3()).done;) {\n            var interactable = _step3.value;\n            if (child.contains(interactable)) return;\n          }\n          originals.set(child, {\n            'aria-hidden': child.getAttribute('aria-hidden'),\n            // @ts-expect-error `inert` does not exist on HTMLElement (yet!)\n            inert: child.inert\n          }); // Mutate the element\n\n          inert(child);\n        });\n      } else {\n        for (var _iterator4 = _createForOfIteratorHelperLoose(originals.keys()), _step4; !(_step4 = _iterator4()).done;) {\n          var _element = _step4.value;\n          // Restore\n          restore(_element); // Cleanup\n\n          originals[\"delete\"](_element);\n        }\n      }\n    };\n  }, [enabled]);\n}\nexport { useInertOthers };","map":{"version":3,"names":["interactables","Set","originals","Map","inert","element","setAttribute","restore","original","get","removeAttribute","useInertOthers","container","enabled","useIsoMorphicEffect","current","add","_iterator","_createForOfIteratorHelperLoose","keys","_step","done","value","contains","document","querySelectorAll","forEach","child","HTMLElement","_iterator2","_step2","interactable","size","set","getAttribute","has","_iterator3","_step3","_iterator4","_step4","_element"],"sources":["/Users/flok/Documents/Check/indexcards.ai/frontend/node_modules/@headlessui/react/src/hooks/use-inert-others.ts"],"sourcesContent":["import { MutableRefObject } from 'react'\nimport { useIsoMorphicEffect } from './use-iso-morphic-effect'\n\nlet interactables = new Set<HTMLElement>()\nlet originals = new Map<HTMLElement, { 'aria-hidden': string | null; inert: boolean }>()\n\nfunction inert(element: HTMLElement) {\n  element.setAttribute('aria-hidden', 'true')\n  // @ts-expect-error `inert` does not exist on HTMLElement (yet!)\n  element.inert = true\n}\n\nfunction restore(element: HTMLElement) {\n  let original = originals.get(element)\n  if (!original) return\n\n  if (original['aria-hidden'] === null) element.removeAttribute('aria-hidden')\n  else element.setAttribute('aria-hidden', original['aria-hidden'])\n  // @ts-expect-error `inert` does not exist on HTMLElement (yet!)\n  element.inert = original.inert\n}\n\nexport function useInertOthers<TElement extends HTMLElement>(\n  container: MutableRefObject<TElement | null>,\n  enabled: boolean = true\n) {\n  useIsoMorphicEffect(() => {\n    if (!enabled) return\n    if (!container.current) return\n\n    let element = container.current\n\n    // Mark myself as an interactable element\n    interactables.add(element)\n\n    // Restore elements that now contain an interactable child\n    for (let original of originals.keys()) {\n      if (original.contains(element)) {\n        restore(original)\n        originals.delete(original)\n      }\n    }\n\n    // Collect direct children of the body\n    document.querySelectorAll('body > *').forEach(child => {\n      if (!(child instanceof HTMLElement)) return // Skip non-HTMLElements\n\n      // Skip the interactables, and the parents of the interactables\n      for (let interactable of interactables) {\n        if (child.contains(interactable)) return\n      }\n\n      // Keep track of the elements\n      if (interactables.size === 1) {\n        originals.set(child, {\n          'aria-hidden': child.getAttribute('aria-hidden'),\n          // @ts-expect-error `inert` does not exist on HTMLElement (yet!)\n          inert: child.inert,\n        })\n\n        // Mutate the element\n        inert(child)\n      }\n    })\n\n    return () => {\n      // Inert is disabled on the current element\n      interactables.delete(element)\n\n      // We still have interactable elements, therefore this one and its parent\n      // will become inert as well.\n      if (interactables.size > 0) {\n        // Collect direct children of the body\n        document.querySelectorAll('body > *').forEach(child => {\n          if (!(child instanceof HTMLElement)) return // Skip non-HTMLElements\n\n          // Skip already inert parents\n          if (originals.has(child)) return\n\n          // Skip the interactables, and the parents of the interactables\n          for (let interactable of interactables) {\n            if (child.contains(interactable)) return\n          }\n\n          originals.set(child, {\n            'aria-hidden': child.getAttribute('aria-hidden'),\n            // @ts-expect-error `inert` does not exist on HTMLElement (yet!)\n            inert: child.inert,\n          })\n\n          // Mutate the element\n          inert(child)\n        })\n      } else {\n        for (let element of originals.keys()) {\n          // Restore\n          restore(element)\n\n          // Cleanup\n          originals.delete(element)\n        }\n      }\n    }\n  }, [enabled])\n}\n"],"mappings":";;AAGA,IAAIA,aAAa,gBAAG,IAAIC,GAAJ,EAApB;AACA,IAAIC,SAAS,gBAAG,IAAIC,GAAJ,EAAhB;AAEA,SAASC,KAATA,CAAeC,OAAf;EACEA,OAAO,CAACC,YAAR,CAAqB,aAArB,EAAoC,MAApC;;EAEAD,OAAO,CAACD,KAAR,GAAgB,IAAhB;AACD;AAED,SAASG,OAATA,CAAiBF,OAAjB;EACE,IAAIG,QAAQ,GAAGN,SAAS,CAACO,GAAV,CAAcJ,OAAd,CAAf;EACA,IAAI,CAACG,QAAL,EAAe;EAEf,IAAIA,QAAQ,CAAC,aAAD,CAAR,KAA4B,IAAhC,EAAsCH,OAAO,CAACK,eAAR,CAAwB,aAAxB,EAAtC,KACKL,OAAO,CAACC,YAAR,CAAqB,aAArB,EAAoCE,QAAQ,CAAC,aAAD,CAA5C;;EAELH,OAAO,CAACD,KAAR,GAAgBI,QAAQ,CAACJ,KAAzB;AACD;SAEeO,eACdC,SAAA,EACAC,OAAA;MAAAA,OAAA;IAAAA,OAAA,GAAmB;;EAEnBC,mBAAmB,CAAC;IAClB,IAAI,CAACD,OAAL,EAAc;IACd,IAAI,CAACD,SAAS,CAACG,OAAf,EAAwB;IAExB,IAAIV,OAAO,GAAGO,SAAS,CAACG,OAAxB;;IAGAf,aAAa,CAACgB,GAAd,CAAkBX,OAAlB;;IAGA,SAAAY,SAAA,GAAAC,+BAAA,CAAqBhB,SAAS,CAACiB,IAAV,EAArB,GAAAC,KAAA,IAAAA,KAAA,GAAAH,SAAA,IAAAI,IAAA,GAAuC;MAAA,IAA9Bb,QAA8B,GAAAY,KAAA,CAAAE,KAAA;MACrC,IAAId,QAAQ,CAACe,QAAT,CAAkBlB,OAAlB,CAAJ,EAAgC;QAC9BE,OAAO,CAACC,QAAD,CAAP;QACAN,SAAS,UAAT,CAAiBM,QAAjB;MACD;IACF;;IAGDgB,QAAQ,CAACC,gBAAT,CAA0B,UAA1B,EAAsCC,OAAtC,CAA8C,UAAAC,KAAK;MACjD,IAAI,EAAEA,KAAK,YAAYC,WAAnB,CAAJ,EAAqC;MAErC;;MACA,SAAAC,UAAA,GAAAX,+BAAA,CAAyBlB,aAAzB,GAAA8B,MAAA,IAAAA,MAAA,GAAAD,UAAA,IAAAR,IAAA,GAAwC;QAAA,IAA/BU,YAA+B,GAAAD,MAAA,CAAAR,KAAA;QACtC,IAAIK,KAAK,CAACJ,QAAN,CAAeQ,YAAf,CAAJ,EAAkC;MACnC;;MAGD,IAAI/B,aAAa,CAACgC,IAAd,KAAuB,CAA3B,EAA8B;QAC5B9B,SAAS,CAAC+B,GAAV,CAAcN,KAAd,EAAqB;UACnB,eAAeA,KAAK,CAACO,YAAN,CAAmB,aAAnB,CADI;UAEnB;UACA9B,KAAK,EAAEuB,KAAK,CAACvB;QAHM,CAArB,EAD4B;;QAQ5BA,KAAK,CAACuB,KAAD,CAAL;MACD;IACF,CAnBD;IAqBA,OAAO;MACL;MACA3B,aAAa,UAAb,CAAqBK,OAArB;MAGA;;MACA,IAAIL,aAAa,CAACgC,IAAd,GAAqB,CAAzB,EAA4B;QAC1B;QACAR,QAAQ,CAACC,gBAAT,CAA0B,UAA1B,EAAsCC,OAAtC,CAA8C,UAAAC,KAAK;UACjD,IAAI,EAAEA,KAAK,YAAYC,WAAnB,CAAJ,EAAqC;UAErC;;UACA,IAAI1B,SAAS,CAACiC,GAAV,CAAcR,KAAd,CAAJ,EAA0B;;UAG1B,SAAAS,UAAA,GAAAlB,+BAAA,CAAyBlB,aAAzB,GAAAqC,MAAA,IAAAA,MAAA,GAAAD,UAAA,IAAAf,IAAA,GAAwC;YAAA,IAA/BU,YAA+B,GAAAM,MAAA,CAAAf,KAAA;YACtC,IAAIK,KAAK,CAACJ,QAAN,CAAeQ,YAAf,CAAJ,EAAkC;UACnC;UAED7B,SAAS,CAAC+B,GAAV,CAAcN,KAAd,EAAqB;YACnB,eAAeA,KAAK,CAACO,YAAN,CAAmB,aAAnB,CADI;YAEnB;YACA9B,KAAK,EAAEuB,KAAK,CAACvB;UAHM,CAArB;;UAOAA,KAAK,CAACuB,KAAD,CAAL;QACD,CAnBD;MAoBD,CAtBD,MAsBO;QACL,SAAAW,UAAA,GAAApB,+BAAA,CAAoBhB,SAAS,CAACiB,IAAV,EAApB,GAAAoB,MAAA,IAAAA,MAAA,GAAAD,UAAA,IAAAjB,IAAA,GAAsC;UAAA,IAA7BmB,QAA6B,GAAAD,MAAA,CAAAjB,KAAA;UACpC;UACAf,OAAO,CAACiC,QAAD,CAAP,CAFoC;;UAKpCtC,SAAS,UAAT,CAAiBsC,QAAjB;QACD;MACF;IACF,CArCD;EAsCD,CA7EkB,EA6EhB,CAAC3B,OAAD,CA7EgB,CAAnB;AA8ED"},"metadata":{},"sourceType":"module"}