{"ast":null,"code":"var _jsxFileName = \"/Users/flok/Documents/Check/indexcards.ai/frontend/src/Show.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useParams } from 'react-router-dom';\nimport { useEffect, useMemo, useState } from 'react';\nimport { getState, persistState, storedCards } from './Store';\nimport SetCard from './SetCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function Title() {\n  _s();\n\n  const {\n    id: setId\n  } = useParams();\n  const set = useMemo(() => {\n    var _getState$sets;\n\n    return (_getState$sets = getState().sets) === null || _getState$sets === void 0 ? void 0 : _getState$sets.find(_ref => {\n      let {\n        id\n      } = _ref;\n      return id.toString() === setId;\n    });\n  }, [setId]);\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    className: \"font-medium text-gray-700 text-lg\",\n    children: set.title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Title, \"M9pLv4ag2KrMcY/072rXzDbVaoA=\", false, function () {\n  return [useParams];\n});\n\n_c = Title;\nexport function Page() {\n  _s2();\n\n  var _getState$sets2, _set$cards2, _set$tags;\n\n  const {\n    id: setId\n  } = useParams();\n  const [set, updateSet] = useState((_getState$sets2 = getState().sets) === null || _getState$sets2 === void 0 ? void 0 : _getState$sets2.find(_ref2 => {\n    let {\n      id\n    } = _ref2;\n    return id.toString() === setId;\n  }));\n  useEffect(() => {\n    const state = getState();\n    persistState({ ...state,\n      sets: [...state.sets.filter(_ref3 => {\n        let {\n          id\n        } = _ref3;\n        return id !== set.id;\n      }), set].sort((a, b) => a.id > b.id ? 1 : -1)\n    });\n  }, [set]);\n  const questionProposals = useMemo(() => {\n    const tagsCommaSeparated = set.tags.join(',').toLowerCase();\n    return storedCards.filter(_ref4 => {\n      let {\n        tags\n      } = _ref4;\n      return tags.some(tag => tagsCommaSeparated.includes(tag.toLowerCase()));\n    }).filter(_ref5 => {\n      var _set$cards;\n\n      let {\n        question: storedCardQuestion\n      } = _ref5;\n      return !((_set$cards = set.cards) !== null && _set$cards !== void 0 && _set$cards.some(_ref6 => {\n        let {\n          question\n        } = _ref6;\n        return storedCardQuestion === question;\n      }));\n    });\n  }, [set]);\n\n  function addCard(_ref7) {\n    let {\n      question,\n      answer,\n      tags\n    } = _ref7;\n    updateSet(currentSet => {\n      var _currentSet$cards;\n\n      return { ...currentSet,\n        cards: [...((_currentSet$cards = currentSet.cards) !== null && _currentSet$cards !== void 0 ? _currentSet$cards : []), {\n          question,\n          answer: answer !== null && answer !== void 0 ? answer : 'Wieso, weshalb, warum?',\n          tags: tags !== null && tags !== void 0 ? tags : ['Wieso?', 'Weshalb?', 'Warum?'],\n          createdAt: Date.now()\n        }]\n      };\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex items-stretch\",\n    children: [/*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"w-2/3 flex-shrink-0 py-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-indigo-200 shadow rounded p-5 text-sm text-indigo-900 leading-loose\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"font-medium\",\n          children: \"We are processing your uploaded lecture notes.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 89\n        }, this), \"Feel free to create your own index cards with our supportive AI in the meantime.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white shadow rounded p-5 mt-10\",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          required: true,\n          placeholder: \"How does DNS work?\",\n          className: \"rounded bg-white border border-gray-200 p-3 resize-none w-full\",\n          rows: 3,\n          onKeyDown: event => {\n            if (event.target.value.length < 10) {\n              return;\n            }\n\n            if (event.key === 'Enter') {\n              const question = event.target.value;\n              addCard({\n                question\n              });\n              event.target.value = '';\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 5\n      }, this), questionProposals.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-indigo-50 shadow rounded p-5 mt-10\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-medium leading-6 text-gray-600 mb-3\",\n          children: \"Index Card Suggestions from our AI\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-wrap -m-1\",\n          children: questionProposals.map(question => /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"bg-indigo-500 text-white text-xs font-medium rounded-full px-2 py-1 m-1\",\n            onClick: () => {\n              addCard(question);\n            },\n            children: question.question\n          }, question.question, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 9\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 6\n      }, this), (_set$cards2 = set.cards) === null || _set$cards2 === void 0 ? void 0 : _set$cards2.sort((a, b) => a.createdAt > b.createdAt ? -1 : 1).map(card => /*#__PURE__*/_jsxDEV(SetCard, {\n        card: card\n      }, card.createdAt, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 80\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"border-l-4 border-gray-100 border-dashed pl-5 ml-10 py-5\",\n      children: ((_set$tags = set.tags) === null || _set$tags === void 0 ? void 0 : _set$tags.length) > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"font-medium mb-3 text-gray-600\",\n          children: \"Tags\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-wrap\",\n          children: set.tags.map(tag => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"bg-gray-300 text-gray-600 text-xs font-medium rounded-full px-2 py-1 m-1\",\n            children: tag\n          }, tag, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 8\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-gray-400 text-sm\",\n        children: \"No tags selected.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 3\n  }, this);\n}\n\n_s2(Page, \"2EhGbhktpDetz9rrs9ib0WECTWQ=\", false, function () {\n  return [useParams];\n});\n\n_c2 = Page;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Title\");\n$RefreshReg$(_c2, \"Page\");","map":{"version":3,"sources":["/Users/flok/Documents/Check/indexcards.ai/frontend/src/Show.js"],"names":["useParams","useEffect","useMemo","useState","getState","persistState","storedCards","SetCard","Title","id","setId","set","sets","find","toString","title","Page","updateSet","state","filter","sort","a","b","questionProposals","tagsCommaSeparated","tags","join","toLowerCase","some","tag","includes","question","storedCardQuestion","cards","addCard","answer","currentSet","createdAt","Date","now","event","target","value","length","key","map","card"],"mappings":"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","sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useEffect, useMemo, useState } from 'react';\nimport { getState, persistState, storedCards } from './Store';\nimport SetCard from './SetCard';\n\nexport function Title() {\n\tconst { id: setId } = useParams();\n\tconst set = useMemo(() => getState().sets?.find(({ id }) => id.toString() === setId), [setId]);\n\n\treturn <h1 className=\"font-medium text-gray-700 text-lg\">{set.title}</h1>;\n}\n\nexport function Page() {\n\tconst { id: setId } = useParams();\n\tconst [set, updateSet] = useState(getState().sets?.find(({ id }) => id.toString() === setId));\n\n\tuseEffect(() => {\n\t\tconst state = getState();\n\n\t\tpersistState({\n\t\t\t...state,\n\t\t\tsets: [...state.sets.filter(({ id }) => id !== set.id), set].sort((a, b) => a.id > b.id ? 1 : -1)\n\t\t});\n\t}, [set]);\n\n\tconst questionProposals = useMemo(() => {\n\t\tconst tagsCommaSeparated = set.tags.join(',').toLowerCase();\n\t\treturn storedCards\n\t\t\t.filter(({ tags }) => tags.some(tag => tagsCommaSeparated.includes(tag.toLowerCase())))\n\t\t\t.filter(({ question: storedCardQuestion }) => !set.cards?.some(({ question }) => storedCardQuestion === question));\n\t}, [set]);\n\n\tfunction addCard({ question, answer, tags }) {\n\t\tupdateSet(currentSet => ({\n\t\t\t...currentSet,\n\t\t\tcards: [\n\t\t\t\t...currentSet.cards ?? [],\n\t\t\t\t{\n\t\t\t\t\tquestion,\n\t\t\t\t\tanswer: answer ?? 'Wieso, weshalb, warum?',\n\t\t\t\t\ttags: tags ?? ['Wieso?', 'Weshalb?', 'Warum?'],\n\t\t\t\t\tcreatedAt: Date.now()\n\t\t\t\t}]\n\t\t}));\n\t}\n\n\treturn (\n\t\t<div className=\"flex items-stretch\">\n\t\t\t<main className=\"w-2/3 flex-shrink-0 py-5\">\n\t\t\t\t<div className=\"bg-indigo-200 shadow rounded p-5 text-sm text-indigo-900 leading-loose\">\n\t\t\t\t\t<span className=\"font-medium\">We are processing your uploaded lecture notes.</span><br />\n\t\t\t\t\tFeel free to create your own index cards with our supportive AI in the meantime.\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"bg-white shadow rounded p-5 mt-10\">\n\t\t\t\t\t<textarea\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tplaceholder=\"How does DNS work?\"\n\t\t\t\t\t\tclassName=\"rounded bg-white border border-gray-200 p-3 resize-none w-full\"\n\t\t\t\t\t\trows={3}\n\t\t\t\t\t\tonKeyDown={event => {\n\t\t\t\t\t\t\tif (event.target.value.length < 10) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (event.key === 'Enter') {\n\t\t\t\t\t\t\t\tconst question = event.target.value;\n\t\t\t\t\t\t\t\taddCard({ question });\n\t\t\t\t\t\t\t\tevent.target.value = '';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\n\t\t\t\t{questionProposals.length > 0 && (\n\t\t\t\t\t<div className=\"bg-indigo-50 shadow rounded p-5 mt-10\">\n\t\t\t\t\t\t<h3 className=\"text-lg font-medium leading-6 text-gray-600 mb-3\">\n\t\t\t\t\t\t\tIndex Card Suggestions from our AI\n\t\t\t\t\t\t</h3>\n\n\t\t\t\t\t\t<div className=\"flex flex-wrap -m-1\">\n\t\t\t\t\t\t\t{questionProposals.map(question => (\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\tkey={question.question}\n\t\t\t\t\t\t\t\t\tclassName=\"bg-indigo-500 text-white text-xs font-medium rounded-full px-2 py-1 m-1\"\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\taddCard(question);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{question.question}\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\n\t\t\t\t{set.cards?.sort((a, b) => a.createdAt > b.createdAt ? -1 : 1).map(card => <SetCard key={card.createdAt} card={card}/>)}\n\t\t\t</main>\n\t\t\t<aside className=\"border-l-4 border-gray-100 border-dashed pl-5 ml-10 py-5\">\n\t\t\t\t{set.tags?.length > 0 ? (<>\n\t\t\t\t\t<h2 className=\"font-medium mb-3 text-gray-600\">Tags</h2>\n\n\t\t\t\t\t<div className=\"flex flex-wrap\">\n\t\t\t\t\t\t{set.tags.map(tag => (\n\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\tkey={tag}\n\t\t\t\t\t\t\t\tclassName=\"bg-gray-300 text-gray-600 text-xs font-medium rounded-full px-2 py-1 m-1\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{tag}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t</>) : (\n\t\t\t\t\t<div className=\"text-gray-400 text-sm\">No tags selected.</div>\n\t\t\t\t)}\n\t\t\t</aside>\n\t\t</div>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}