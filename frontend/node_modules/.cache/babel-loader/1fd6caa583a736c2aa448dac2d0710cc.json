{"ast":null,"code":"import React, { createContext, useContext, useCallback } from 'react';\nimport { useIsoMorphicEffect } from '../hooks/use-iso-morphic-effect.esm.js';\nvar StackContext = /*#__PURE__*/createContext(function () {});\nStackContext.displayName = 'StackContext';\nvar StackMessage;\n(function (StackMessage) {\n  StackMessage[StackMessage[\"Add\"] = 0] = \"Add\";\n  StackMessage[StackMessage[\"Remove\"] = 1] = \"Remove\";\n})(StackMessage || (StackMessage = {}));\nfunction useStackContext() {\n  return useContext(StackContext);\n}\nfunction StackProvider(_ref) {\n  var children = _ref.children,\n    onUpdate = _ref.onUpdate,\n    type = _ref.type,\n    element = _ref.element;\n  var parentUpdate = useStackContext();\n  var notify = useCallback(function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    // Notify our layer\n    onUpdate == null ? void 0 : onUpdate.apply(void 0, args); // Notify the parent\n\n    parentUpdate.apply(void 0, args);\n  }, [parentUpdate, onUpdate]);\n  useIsoMorphicEffect(function () {\n    notify(StackMessage.Add, type, element);\n    return function () {\n      return notify(StackMessage.Remove, type, element);\n    };\n  }, [notify, type, element]);\n  return React.createElement(StackContext.Provider, {\n    value: notify\n  }, children);\n}\nexport { StackMessage, StackProvider, useStackContext };","map":{"version":3,"names":["StackContext","createContext","displayName","StackMessage","useStackContext","useContext","StackProvider","_ref","children","onUpdate","type","element","parentUpdate","notify","useCallback","args","Array","_len","_key","arguments","apply","useIsoMorphicEffect","Add","Remove","React","createElement","Provider","value"],"sources":["/Users/flok/Documents/Check/indexcards.ai/frontend/node_modules/@headlessui/react/src/internal/stack-context.tsx"],"sourcesContent":["import React, {\n  createContext,\n  useCallback,\n  useContext,\n\n  // Types\n  MutableRefObject,\n  ReactNode,\n} from 'react'\nimport { useIsoMorphicEffect } from '../hooks/use-iso-morphic-effect'\n\ntype OnUpdate = (\n  message: StackMessage,\n  type: string,\n  element: MutableRefObject<HTMLElement | null>\n) => void\n\nlet StackContext = createContext<OnUpdate>(() => {})\nStackContext.displayName = 'StackContext'\n\nexport enum StackMessage {\n  Add,\n  Remove,\n}\n\nexport function useStackContext() {\n  return useContext(StackContext)\n}\n\nexport function StackProvider({\n  children,\n  onUpdate,\n  type,\n  element,\n}: {\n  children: ReactNode\n  onUpdate?: OnUpdate\n  type: string\n  element: MutableRefObject<HTMLElement | null>\n}) {\n  let parentUpdate = useStackContext()\n\n  let notify = useCallback(\n    (...args: Parameters<OnUpdate>) => {\n      // Notify our layer\n      onUpdate?.(...args)\n\n      // Notify the parent\n      parentUpdate(...args)\n    },\n    [parentUpdate, onUpdate]\n  )\n\n  useIsoMorphicEffect(() => {\n    notify(StackMessage.Add, type, element)\n    return () => notify(StackMessage.Remove, type, element)\n  }, [notify, type, element])\n\n  return <StackContext.Provider value={notify}>{children}</StackContext.Provider>\n}\n"],"mappings":";;AAiBA,IAAIA,YAAY,gBAAGC,aAAa,CAAW,cAAX,CAAhC;AACAD,YAAY,CAACE,WAAb,GAA2B,cAA3B;IAEYC,YAAA;AAAZ,WAAYA,YAAA;EACVA,YAAA,CAAAA,YAAA;EACAA,YAAA,CAAAA,YAAA;AACD,CAHD,EAAYA,YAAY,KAAZA,YAAY,MAAxB;SAKgBC,gBAAA;EACd,OAAOC,UAAU,CAACL,YAAD,CAAjB;AACD;SAEeM,cAAAC,IAAA;MACdC,QAAA,GAAAD,IAAA,CAAAC,QAAA;IACAC,QAAA,GAAAF,IAAA,CAAAE,QAAA;IACAC,IAAA,GAAAH,IAAA,CAAAG,IAAA;IACAC,OAAA,GAAAJ,IAAA,CAAAI,OAAA;EAOA,IAAIC,YAAY,GAAGR,eAAe,EAAlC;EAEA,IAAIS,MAAM,GAAGC,WAAW,CACtB;sCAAIC,IAAA,OAAAC,KAAA,CAAAC,IAAA,GAAAC,IAAA,MAAAA,IAAA,GAAAD,IAAA,EAAAC,IAAA;MAAAH,IAAA,CAAAG,IAAA,IAAAC,SAAA,CAAAD,IAAA;;;IACF;IACAT,QAAQ,QAAR,YAAAA,QAAQ,CAAAW,KAAR,SAAcL,IAAd;;IAGAH,YAAY,CAAAQ,KAAZ,SAAgBL,IAAhB;EACD,CAPqB,EAQtB,CAACH,YAAD,EAAeH,QAAf,CARsB,CAAxB;EAWAY,mBAAmB,CAAC;IAClBR,MAAM,CAACV,YAAY,CAACmB,GAAd,EAAmBZ,IAAnB,EAAyBC,OAAzB,CAAN;IACA,OAAO;MAAA,OAAME,MAAM,CAACV,YAAY,CAACoB,MAAd,EAAsBb,IAAtB,EAA4BC,OAA5B,CAAZ;IAAA,CAAP;EACD,CAHkB,EAGhB,CAACE,MAAD,EAASH,IAAT,EAAeC,OAAf,CAHgB,CAAnB;EAKA,OAAOa,KAAA,CAAAC,aAAA,CAACzB,YAAY,CAAC0B,QAAd;IAAuBC,KAAK,EAAEd;GAA9B,EAAuCL,QAAvC,CAAP;AACD"},"metadata":{},"sourceType":"module"}