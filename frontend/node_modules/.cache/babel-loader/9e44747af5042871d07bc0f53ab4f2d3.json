{"ast":null,"code":"import { match } from './match.esm.js';\n\n//  - https://stackoverflow.com/a/30753870\n\nvar focusableSelector = /*#__PURE__*/['[contentEditable=true]', '[tabindex]', 'a[href]', 'area[href]', 'button:not([disabled])', 'iframe', 'input:not([disabled])', 'select:not([disabled])', 'textarea:not([disabled])'].map(process.env.NODE_ENV === 'test' ?\n// TODO: Remove this once JSDOM fixes the issue where an element that is\n// \"hidden\" can be the document.activeElement, because this is not possible\n// in real browsers.\n// TODO: Remove this once JSDOM fixes the issue where an element that is\nfunction (selector) {\n  return selector + \":not([tabindex='-1']):not([style*='display: none'])\";\n} : function (selector) {\n  return selector + \":not([tabindex='-1'])\";\n}).join(',');\nvar Focus;\n(function (Focus) {\n  /** Focus the first non-disabled element */\n  Focus[Focus[\"First\"] = 1] = \"First\";\n  /** Focus the previous non-disabled element */\n\n  Focus[Focus[\"Previous\"] = 2] = \"Previous\";\n  /** Focus the next non-disabled element */\n\n  Focus[Focus[\"Next\"] = 4] = \"Next\";\n  /** Focus the last non-disabled element */\n\n  Focus[Focus[\"Last\"] = 8] = \"Last\";\n  /** Wrap tab around */\n\n  Focus[Focus[\"WrapAround\"] = 16] = \"WrapAround\";\n  /** Prevent scrolling the focusable elements into view */\n\n  Focus[Focus[\"NoScroll\"] = 32] = \"NoScroll\";\n})(Focus || (Focus = {}));\nvar FocusResult;\n(function (FocusResult) {\n  /** Something went wrong while trying to focus. */\n  FocusResult[FocusResult[\"Error\"] = 0] = \"Error\";\n  /** When `Focus.WrapAround` is enabled, going from position `N` to `N+1` where `N` is the last index in the array, then we overflow. */\n\n  FocusResult[FocusResult[\"Overflow\"] = 1] = \"Overflow\";\n  /** Focus was successful. */\n\n  FocusResult[FocusResult[\"Success\"] = 2] = \"Success\";\n  /** When `Focus.WrapAround` is enabled, going from position `N` to `N-1` where `N` is the first index in the array, then we underflow. */\n\n  FocusResult[FocusResult[\"Underflow\"] = 3] = \"Underflow\";\n})(FocusResult || (FocusResult = {}));\nvar Direction;\n(function (Direction) {\n  Direction[Direction[\"Previous\"] = -1] = \"Previous\";\n  Direction[Direction[\"Next\"] = 1] = \"Next\";\n})(Direction || (Direction = {}));\nfunction getFocusableElements(container) {\n  if (container === void 0) {\n    container = document.body;\n  }\n  if (container == null) return [];\n  return Array.from(container.querySelectorAll(focusableSelector));\n}\nvar FocusableMode;\n(function (FocusableMode) {\n  /** The element itself must be focusable. */\n  FocusableMode[FocusableMode[\"Strict\"] = 0] = \"Strict\";\n  /** The element should be inside of a focusable element. */\n\n  FocusableMode[FocusableMode[\"Loose\"] = 1] = \"Loose\";\n})(FocusableMode || (FocusableMode = {}));\nfunction isFocusableElement(element, mode) {\n  var _match;\n  if (mode === void 0) {\n    mode = FocusableMode.Strict;\n  }\n  if (element === document.body) return false;\n  return match(mode, (_match = {}, _match[FocusableMode.Strict] = function () {\n    return element.matches(focusableSelector);\n  }, _match[FocusableMode.Loose] = function () {\n    var next = element;\n    while (next !== null) {\n      if (next.matches(focusableSelector)) return true;\n      next = next.parentElement;\n    }\n    return false;\n  }, _match));\n}\nfunction focusElement(element) {\n  element == null ? void 0 : element.focus({\n    preventScroll: true\n  });\n}\nfunction focusIn(container, focus) {\n  var elements = Array.isArray(container) ? container : getFocusableElements(container);\n  var active = document.activeElement;\n  var direction = function () {\n    if (focus & (Focus.First | Focus.Next)) return Direction.Next;\n    if (focus & (Focus.Previous | Focus.Last)) return Direction.Previous;\n    throw new Error('Missing Focus.First, Focus.Previous, Focus.Next or Focus.Last');\n  }();\n  var startIndex = function () {\n    if (focus & Focus.First) return 0;\n    if (focus & Focus.Previous) return Math.max(0, elements.indexOf(active)) - 1;\n    if (focus & Focus.Next) return Math.max(0, elements.indexOf(active)) + 1;\n    if (focus & Focus.Last) return elements.length - 1;\n    throw new Error('Missing Focus.First, Focus.Previous, Focus.Next or Focus.Last');\n  }();\n  var focusOptions = focus & Focus.NoScroll ? {\n    preventScroll: true\n  } : {};\n  var offset = 0;\n  var total = elements.length;\n  var next = undefined;\n  do {\n    var _next;\n\n    // Guard against infinite loops\n    if (offset >= total || offset + total <= 0) return FocusResult.Error;\n    var nextIdx = startIndex + offset;\n    if (focus & Focus.WrapAround) {\n      nextIdx = (nextIdx + total) % total;\n    } else {\n      if (nextIdx < 0) return FocusResult.Underflow;\n      if (nextIdx >= total) return FocusResult.Overflow;\n    }\n    next = elements[nextIdx]; // Try the focus the next element, might not work if it is \"hidden\" to the user.\n\n    (_next = next) == null ? void 0 : _next.focus(focusOptions); // Try the next one in line\n\n    offset += direction;\n  } while (next !== document.activeElement); // This is a little weird, but let me try and explain: There are a few scenario's\n  // in chrome for example where a focused `<a>` tag does not get the default focus\n  // styles and sometimes they do. This highly depends on whether you started by\n  // clicking or by using your keyboard. When you programmatically add focus `anchor.focus()`\n  // then the active element (document.activeElement) is this anchor, which is expected.\n  // However in that case the default focus styles are not applied *unless* you\n  // also add this tabindex.\n\n  if (!next.hasAttribute('tabindex')) next.setAttribute('tabindex', '0');\n  return FocusResult.Success;\n}\nexport { Focus, FocusResult, FocusableMode, focusElement, focusIn, getFocusableElements, isFocusableElement };","map":{"version":3,"names":["focusableSelector","map","process","env","NODE_ENV","selector","join","Focus","FocusResult","Direction","getFocusableElements","container","document","body","Array","from","querySelectorAll","FocusableMode","isFocusableElement","element","mode","Strict","match","_match","matches","Loose","next","parentElement","focusElement","focus","preventScroll","focusIn","elements","isArray","active","activeElement","direction","First","Next","Previous","Last","Error","startIndex","Math","max","indexOf","length","focusOptions","NoScroll","offset","total","undefined","_next","nextIdx","WrapAround","Underflow","Overflow","hasAttribute","setAttribute","Success"],"sources":["/Users/flok/Documents/Check/indexcards.ai/frontend/node_modules/@headlessui/react/src/utils/focus-management.ts"],"sourcesContent":["import { match } from './match'\n\n// Credit:\n//  - https://stackoverflow.com/a/30753870\nlet focusableSelector = [\n  '[contentEditable=true]',\n  '[tabindex]',\n  'a[href]',\n  'area[href]',\n  'button:not([disabled])',\n  'iframe',\n  'input:not([disabled])',\n  'select:not([disabled])',\n  'textarea:not([disabled])',\n]\n  .map(\n    process.env.NODE_ENV === 'test'\n      ? // TODO: Remove this once JSDOM fixes the issue where an element that is\n        // \"hidden\" can be the document.activeElement, because this is not possible\n        // in real browsers.\n        selector => `${selector}:not([tabindex='-1']):not([style*='display: none'])`\n      : selector => `${selector}:not([tabindex='-1'])`\n  )\n  .join(',')\n\nexport enum Focus {\n  /** Focus the first non-disabled element */\n  First = 1 << 0,\n\n  /** Focus the previous non-disabled element */\n  Previous = 1 << 1,\n\n  /** Focus the next non-disabled element */\n  Next = 1 << 2,\n\n  /** Focus the last non-disabled element */\n  Last = 1 << 3,\n\n  /** Wrap tab around */\n  WrapAround = 1 << 4,\n\n  /** Prevent scrolling the focusable elements into view */\n  NoScroll = 1 << 5,\n}\n\nexport enum FocusResult {\n  /** Something went wrong while trying to focus. */\n  Error,\n\n  /** When `Focus.WrapAround` is enabled, going from position `N` to `N+1` where `N` is the last index in the array, then we overflow. */\n  Overflow,\n\n  /** Focus was successful. */\n  Success,\n\n  /** When `Focus.WrapAround` is enabled, going from position `N` to `N-1` where `N` is the first index in the array, then we underflow. */\n  Underflow,\n}\n\nenum Direction {\n  Previous = -1,\n  Next = 1,\n}\n\nexport function getFocusableElements(container: HTMLElement | null = document.body) {\n  if (container == null) return []\n  return Array.from(container.querySelectorAll<HTMLElement>(focusableSelector))\n}\n\nexport enum FocusableMode {\n  /** The element itself must be focusable. */\n  Strict,\n\n  /** The element should be inside of a focusable element. */\n  Loose,\n}\n\nexport function isFocusableElement(\n  element: HTMLElement,\n  mode: FocusableMode = FocusableMode.Strict\n) {\n  if (element === document.body) return false\n\n  return match(mode, {\n    [FocusableMode.Strict]() {\n      return element.matches(focusableSelector)\n    },\n    [FocusableMode.Loose]() {\n      let next: HTMLElement | null = element\n\n      while (next !== null) {\n        if (next.matches(focusableSelector)) return true\n        next = next.parentElement\n      }\n\n      return false\n    },\n  })\n}\n\nexport function focusElement(element: HTMLElement | null) {\n  element?.focus({ preventScroll: true })\n}\n\nexport function focusIn(container: HTMLElement | HTMLElement[], focus: Focus) {\n  let elements = Array.isArray(container) ? container : getFocusableElements(container)\n  let active = document.activeElement as HTMLElement\n\n  let direction = (() => {\n    if (focus & (Focus.First | Focus.Next)) return Direction.Next\n    if (focus & (Focus.Previous | Focus.Last)) return Direction.Previous\n\n    throw new Error('Missing Focus.First, Focus.Previous, Focus.Next or Focus.Last')\n  })()\n\n  let startIndex = (() => {\n    if (focus & Focus.First) return 0\n    if (focus & Focus.Previous) return Math.max(0, elements.indexOf(active)) - 1\n    if (focus & Focus.Next) return Math.max(0, elements.indexOf(active)) + 1\n    if (focus & Focus.Last) return elements.length - 1\n\n    throw new Error('Missing Focus.First, Focus.Previous, Focus.Next or Focus.Last')\n  })()\n\n  let focusOptions = focus & Focus.NoScroll ? { preventScroll: true } : {}\n\n  let offset = 0\n  let total = elements.length\n  let next = undefined\n  do {\n    // Guard against infinite loops\n    if (offset >= total || offset + total <= 0) return FocusResult.Error\n\n    let nextIdx = startIndex + offset\n\n    if (focus & Focus.WrapAround) {\n      nextIdx = (nextIdx + total) % total\n    } else {\n      if (nextIdx < 0) return FocusResult.Underflow\n      if (nextIdx >= total) return FocusResult.Overflow\n    }\n\n    next = elements[nextIdx]\n\n    // Try the focus the next element, might not work if it is \"hidden\" to the user.\n    next?.focus(focusOptions)\n\n    // Try the next one in line\n    offset += direction\n  } while (next !== document.activeElement)\n\n  // This is a little weird, but let me try and explain: There are a few scenario's\n  // in chrome for example where a focused `<a>` tag does not get the default focus\n  // styles and sometimes they do. This highly depends on whether you started by\n  // clicking or by using your keyboard. When you programmatically add focus `anchor.focus()`\n  // then the active element (document.activeElement) is this anchor, which is expected.\n  // However in that case the default focus styles are not applied *unless* you\n  // also add this tabindex.\n  if (!next.hasAttribute('tabindex')) next.setAttribute('tabindex', '0')\n\n  return FocusResult.Success\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}