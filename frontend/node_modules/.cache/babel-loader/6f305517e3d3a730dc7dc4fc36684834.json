{"ast":null,"code":"import { useState } from 'react';\nimport { useIsoMorphicEffect } from './use-iso-morphic-effect.esm.js';\nfunction resolveType(props) {\n  var _props$as;\n  if (props.type) return props.type;\n  var tag = (_props$as = props.as) != null ? _props$as : 'button';\n  if (typeof tag === 'string' && tag.toLowerCase() === 'button') return 'button';\n  return undefined;\n}\nfunction useResolveButtonType(props, ref) {\n  var _useState = useState(function () {\n      return resolveType(props);\n    }),\n    type = _useState[0],\n    setType = _useState[1];\n  useIsoMorphicEffect(function () {\n    setType(resolveType(props));\n  }, [props.type, props.as]);\n  useIsoMorphicEffect(function () {\n    if (type) return;\n    if (!ref.current) return;\n    if (ref.current instanceof HTMLButtonElement && !ref.current.hasAttribute('type')) {\n      setType('button');\n    }\n  }, [type, ref]);\n  return type;\n}\nexport { useResolveButtonType };","map":{"version":3,"names":["resolveType","props","type","tag","_props$as","as","toLowerCase","undefined","useResolveButtonType","ref","useState","_useState","setType","useIsoMorphicEffect","current","HTMLButtonElement","hasAttribute"],"sources":["/Users/flok/Documents/Check/indexcards.ai/frontend/node_modules/@headlessui/react/src/hooks/use-resolve-button-type.ts"],"sourcesContent":["import { useState, MutableRefObject } from 'react'\n\nimport { useIsoMorphicEffect } from './use-iso-morphic-effect'\n\nfunction resolveType<TTag>(props: { type?: string; as?: TTag }) {\n  if (props.type) return props.type\n\n  let tag = props.as ?? 'button'\n  if (typeof tag === 'string' && tag.toLowerCase() === 'button') return 'button'\n\n  return undefined\n}\n\nexport function useResolveButtonType<TTag>(\n  props: { type?: string; as?: TTag },\n  ref: MutableRefObject<HTMLElement | null>\n) {\n  let [type, setType] = useState(() => resolveType(props))\n\n  useIsoMorphicEffect(() => {\n    setType(resolveType(props))\n  }, [props.type, props.as])\n\n  useIsoMorphicEffect(() => {\n    if (type) return\n    if (!ref.current) return\n\n    if (ref.current instanceof HTMLButtonElement && !ref.current.hasAttribute('type')) {\n      setType('button')\n    }\n  }, [type, ref])\n\n  return type\n}\n"],"mappings":";;AAIA,SAASA,WAATA,CAA2BC,KAA3B;;EACE,IAAIA,KAAK,CAACC,IAAV,EAAgB,OAAOD,KAAK,CAACC,IAAb;EAEhB,IAAIC,GAAG,IAAAC,SAAA,GAAGH,KAAK,CAACI,EAAT,YAAAD,SAAA,GAAe,QAAtB;EACA,IAAI,OAAOD,GAAP,KAAe,QAAf,IAA2BA,GAAG,CAACG,WAAJ,OAAsB,QAArD,EAA+D,OAAO,QAAP;EAE/D,OAAOC,SAAP;AACD;SAEeC,qBACdP,KAAA,EACAQ,GAAA;kBAEsBC,QAAQ,CAAC;MAAA,OAAMV,WAAW,CAACC,KAAD,CAAjB;IAAA,CAAD;IAAzBC,IAAA,GAAAS,SAAA;IAAMC,OAAA,GAAAD,SAAA;EAEXE,mBAAmB,CAAC;IAClBD,OAAO,CAACZ,WAAW,CAACC,KAAD,CAAZ,CAAP;EACD,CAFkB,EAEhB,CAACA,KAAK,CAACC,IAAP,EAAaD,KAAK,CAACI,EAAnB,CAFgB,CAAnB;EAIAQ,mBAAmB,CAAC;IAClB,IAAIX,IAAJ,EAAU;IACV,IAAI,CAACO,GAAG,CAACK,OAAT,EAAkB;IAElB,IAAIL,GAAG,CAACK,OAAJ,YAAuBC,iBAAvB,IAA4C,CAACN,GAAG,CAACK,OAAJ,CAAYE,YAAZ,CAAyB,MAAzB,CAAjD,EAAmF;MACjFJ,OAAO,CAAC,QAAD,CAAP;IACD;EACF,CAPkB,EAOhB,CAACV,IAAD,EAAOO,GAAP,CAPgB,CAAnB;EASA,OAAOP,IAAP;AACD"},"metadata":{},"sourceType":"module"}